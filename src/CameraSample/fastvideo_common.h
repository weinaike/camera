#ifndef __FAST_COMMON_H__
#define __FAST_COMMON_H__


#ifdef __cplusplus
    extern "C" {
#endif

typedef enum {
	FAST_OK,                           // There is no error during function execution

	FAST_TRIAL_PERIOD_EXPIRED,

	FAST_INVALID_DEVICE,               // Device with selected index does not exist or device is non NVIDIA device or device is non CUDA-compatible device
	FAST_INCOMPATIBLE_DEVICE,          // Device is CUDA-compatible, but its compute compatibility is below 2.0, thus device is considered to be incompatible with SDK
	FAST_INSUFFICIENT_DEVICE_MEMORY,   // Available device memory is not enough to allocate new buffer
	FAST_INSUFFICIENT_HOST_MEMORY,     // Available host memory is not enough to allocate new buffer
	FAST_INVALID_HANDLE,               // Component handle is invalid or has inappropriate type
	FAST_INVALID_VALUE,                // Some parameter of the function called is invalid or combination of input parameters are unacceptable
	FAST_UNAPPLICABLE_OPERATION,	   // This operation can not be applied to the current type of data
	FAST_INVALID_SIZE,                 // Image dimension is invalid
	FAST_UNALIGNED_DATA,               // Buffer base pointers or pitch are not properly aligned
	FAST_INVALID_TABLE,                // Invalid quantization / Huffman table
	FAST_BITSTREAM_CORRUPT,            // JPEG bitstream is corrupted and can not be decoded
	FAST_EXECUTION_FAILURE,            // Device kernel execution failure
	FAST_INTERNAL_ERROR,               // Internal error, non-kernel software execution failure
	FAST_UNSUPPORTED_SURFACE,

	FAST_IO_ERROR,                     // Failed to read/write file
	FAST_INVALID_FORMAT,               // Invalid file format
	FAST_UNSUPPORTED_FORMAT,           // File format is not supported by the current version of SDK
	FAST_END_OF_STREAM,

	FAST_MJPEG_THREAD_ERROR,
	FAST_TIMEOUT,
	FAST_MJPEG_OPEN_FILE_ERROR,

	FAST_UNKNOWN_ERROR,                 // Unrecognized error
	FAST_INCOMPATIBLE_DRIVER
} fastStatus_t;

typedef enum {
	FAST_I8,
	FAST_I10,
	FAST_I12,
	FAST_I14,
	FAST_I16,

	FAST_RGB8,
	FAST_BGR8,
	FAST_RGB12,
	FAST_RGB16,

	FAST_BGRX8,

	FAST_CrCbY8,
	FAST_YCbCr8
} fastSurfaceFormat_t;

typedef enum {
	FAST_JPEG_SEQUENTIAL_DCT, FAST_JPEG_LOSSLESS
} fastJpegMode_t;

typedef enum {
	FAST_JPEG_Y, FAST_JPEG_444, FAST_JPEG_422, FAST_JPEG_420
} fastJpegFormat_t;

typedef enum {
	FAST_BAYER_NONE,
	FAST_BAYER_RGGB,
	FAST_BAYER_BGGR,
	FAST_BAYER_GBRG,
	FAST_BAYER_GRBG,
} fastBayerPattern_t;

typedef enum {
	FAST_DFPD,
	FAST_HQLI,
	FAST_MG,
	FAST_MG2,
	FAST_MG_V2,

	FAST_BINNING_2x2,
	FAST_BINNING_4x4,
	FAST_BINNING_8x8,
	FAST_L7,
	FAST_AMAZE
} fastDebayerType_t;

typedef enum {
	FAST_RAW_XIMEA12,
	FAST_RAW_PTG12,
} fastRawFormat_t;

typedef enum {
	FAST_SDI_YV12_BT601_FR,
	FAST_SDI_YV12_BT601,
	FAST_SDI_YV12_BT709,
	FAST_SDI_YV12_BT2020,

	FAST_SDI_NV12_BT601_FR,
	FAST_SDI_NV12_BT601,
	FAST_SDI_NV12_BT709,
	FAST_SDI_NV12_BT2020,

	FAST_SDI_P010_BT601_FR,
	FAST_SDI_P010_BT601,
	FAST_SDI_P010_BT709,
	FAST_SDI_P010_BT2020,

	FAST_SDI_420_8_YCbCr_PLANAR_BT601_FR,
	FAST_SDI_420_8_YCbCr_PLANAR_BT601,
	FAST_SDI_420_8_YCbCr_PLANAR_BT709,
	FAST_SDI_420_8_YCbCr_PLANAR_BT2020,

	FAST_SDI_420_10_LSBZ_YCbCr_PLANAR_BT601_FR,
	FAST_SDI_420_10_LSBZ_YCbCr_PLANAR_BT601,
	FAST_SDI_420_10_LSBZ_YCbCr_PLANAR_BT709,
	FAST_SDI_420_10_LSBZ_YCbCr_PLANAR_BT2020,

	FAST_SDI_420_10_MSBZ_YCbCr_PLANAR_BT601_FR,
	FAST_SDI_420_10_MSBZ_YCbCr_PLANAR_BT601,
	FAST_SDI_420_10_MSBZ_YCbCr_PLANAR_BT709,
	FAST_SDI_420_10_MSBZ_YCbCr_PLANAR_BT2020,

	FAST_SDI_422_8_CbYCrY_BT601_FR,
	FAST_SDI_422_8_CbYCrY_BT601,
	FAST_SDI_422_8_CbYCrY_BT709,
	FAST_SDI_422_8_CbYCrY_BT2020,

	FAST_SDI_422_8_CrYCbY_BT601_FR,
	FAST_SDI_422_8_CrYCbY_BT601,
	FAST_SDI_422_8_CrYCbY_BT709,
	FAST_SDI_422_8_CrYCbY_BT2020,

	FAST_SDI_422_10_CbYCrY_PACKED_BT2020,
	FAST_SDI_422_10_CbYCrY_PACKED_BT601_FR,
	FAST_SDI_422_10_CbYCrY_PACKED_BT601,
	FAST_SDI_422_10_CbYCrY_PACKED_BT709,

	FAST_SDI_422_8_YCbCr_PLANAR_BT601_FR,
	FAST_SDI_422_8_YCbCr_PLANAR_BT601,
	FAST_SDI_422_8_YCbCr_PLANAR_BT709,
	FAST_SDI_422_8_YCbCr_PLANAR_BT2020,

	FAST_SDI_422_10_MSBZ_YCbCr_PLANAR_BT601_FR,
	FAST_SDI_422_10_MSBZ_YCbCr_PLANAR_BT601,
	FAST_SDI_422_10_MSBZ_YCbCr_PLANAR_BT709,
	FAST_SDI_422_10_MSBZ_YCbCr_PLANAR_BT2020,

	FAST_SDI_422_10_LSBZ_YCbCr_PLANAR_BT601_FR,
	FAST_SDI_422_10_LSBZ_YCbCr_PLANAR_BT601,
	FAST_SDI_422_10_LSBZ_YCbCr_PLANAR_BT709,
	FAST_SDI_422_10_LSBZ_YCbCr_PLANAR_BT2020,

	FAST_SDI_444_8_YCbCr_PLANAR_BT601_FR,
	FAST_SDI_444_8_YCbCr_PLANAR_BT601,
	FAST_SDI_444_8_YCbCr_PLANAR_BT709,
	FAST_SDI_444_8_YCbCr_PLANAR_BT2020,

	FAST_SDI_444_10_LSBZ_YCbCr_PLANAR_BT601_FR,
	FAST_SDI_444_10_LSBZ_YCbCr_PLANAR_BT601,
	FAST_SDI_444_10_LSBZ_YCbCr_PLANAR_BT709,
	FAST_SDI_444_10_LSBZ_YCbCr_PLANAR_BT2020,

	FAST_SDI_RGBA,

	FAST_SDI_RGB_10_BMR10L,
	FAST_SDI_RGB_12_BMR12B,
	FAST_SDI_RGB_12_BMR12L,
	FAST_SDI_RGB_10_BMR10B

} fastSDIFormat_t;

typedef enum {
	FAST_RGBA_ALPHA_PADDING_ZERO,
	FAST_RGBA_ALPHA_PADDING_FF,
} fastRGBAAlphaPadding_t;

typedef enum {
	FAST_CHANNEL_H,
	FAST_CHANNEL_S,
	FAST_CHANNEL_L_OR_V
} fastColorSaturationChannelType_t;

typedef enum {
	FAST_CHANNEL_R,
	FAST_CHANNEL_G,
	FAST_CHANNEL_B
} fastChannelType_t;

typedef enum {
	FAST_OP_REPLACE,
	FAST_OP_ADD,
	FAST_OP_MULTIPLY
} fastColorSaturationOperationType_t;

typedef enum {
	FAST_BINNING_NONE,
	FAST_BINNING_SUM,
	FAST_BINNING_AVERAGE
} fastBinningMode_t;

typedef enum {
	FAST_GAUSSIAN_SHARPEN = 1,
	FAST_LUT_8_8,
	FAST_LUT_8_8_C,
	FAST_LUT_8_12,
	FAST_LUT_8_12_C,
	FAST_LUT_8_16,
	FAST_LUT_8_16_C,
	FAST_LUT_8_16_BAYER,

	FAST_LUT_10_16,
	FAST_LUT_10_16_BAYER,

	FAST_LUT_12_8,
	FAST_LUT_12_8_C,
	FAST_LUT_12_12,
	FAST_LUT_12_12_C,
	FAST_LUT_12_16,
	FAST_LUT_12_16_C,
	FAST_LUT_12_16_BAYER,

	FAST_LUT_14_16,
	FAST_LUT_14_16_BAYER,

	FAST_LUT_16_16,
	FAST_LUT_16_16_C,
	FAST_LUT_16_8,
	FAST_LUT_16_8_C,
	FAST_LUT_16_16_BAYER,

	FAST_LUT_16_16_FR,
	FAST_LUT_16_16_FR_C,
	FAST_LUT_16_16_FR_BAYER,

	FAST_HSV_LUT_3D,
	FAST_RGB_LUT_3D,

	FAST_TONE_CURVE,
	
	FAST_SAM,
	FAST_SAM16,

	FAST_BASE_COLOR_CORRECTION,
	FAST_WHITE_BALANCE,
	FAST_COLUMN_FILTER,
	FAST_COLOR_SATURATION_HSL,
	FAST_COLOR_SATURATION_HSV,

	FAST_MEDIAN,
	FAST_BAYER_BLACK_SHIFT,
	FAST_DEFRINGE,
	FAST_BAD_PIXEL_CORRECTION_5X5,
	FAST_BINNING,
	FAST_GAUSSIAN_BLUR,
	FAST_FFC
} fastImageFilterType_t;

typedef enum {
	FAST_BIT_DEPTH,
	FAST_SELECT_CHANNEL,
	FAST_RGB_TO_GRAYSCALE,
	FAST_GRAYSCALE_TO_GRAYSCALERGB,
	FAST_BAYER_TO_RGB,
	FAST_GRAYSCALE_TO_RGB
} fastSurfaceConverter_t;

typedef enum {
	FAST_AFFINE_NOP = 0,
	FAST_AFFINE_FLIP = 1,
	FAST_AFFINE_FLOP = 2,
	FAST_AFFINE_ROTATION180 = 4,
	FAST_AFFINE_ROTATION90LEFT = 8,
	FAST_AFFINE_ROTATION90LEFT_FLOPPED = 16,
	FAST_AFFINE_ROTATION90RIGHT = 32,
	FAST_AFFINE_ROTATION90RIGHT_FLOPPED = 64,
	FAST_AFFINE_ALL = 127
} fastAffineTransformations_t;

typedef enum {
	FAST_LANCZOS = 1
} fastResizeType_t;

typedef enum {
	FAST_CONVERT_NONE,
	FAST_CONVERT_BGR
} fastConvertType_t;

typedef enum {
	FAST_HISTOGRAM_COMMON,
	FAST_HISTOGRAM_BAYER,
	FAST_HISTOGRAM_BAYER_G1G2,
	FAST_HISTOGRAM_PARADE,
} fastHistogramType_t;

typedef enum {
	FAST_HDR_IMPORT_16,
	FAST_HDR_IMPORT_32
} fastHDRImportType_t;

typedef enum {
	FAST_HDR_GRAY_3x12
} fastHDRBuilderFormat_t;

typedef enum {
	FAST_HDR_EXPOSURE_X1,
	FAST_HDR_EXPOSURE_X4,
	FAST_HDR_EXPOSURE_X16
} fastHDRImageExposure_t;

typedef enum {
	FAST_LICENSE_TYPE_DEMO,
	FAST_LICENSE_TYPE_TRIAL,
	FAST_LICENSE_TYPE_STANDARD_SENSELOCK,
	FAST_LICENSE_TYPE_STANDARD_GUARDANT,
	FAST_LICENSE_TYPE_ENTERPRISE
} fastLicenseType_t;

typedef enum {
	FAST_LICENSE_PROVIDER_NONE,
	FAST_LICENSE_PROVIDER_SENSELOCK_DONGLE,
	FAST_LICENSE_PROVIDER_GUARDANT_DONGLE,
	FAST_LICENSE_PROVIDER_GUARDANT_SOFT_KEY
} fastLicenseProvider_t;

typedef enum {
	FAST_IMPORT_FROM_HOST,
	FAST_IMPORT_FROM_DEVICE,
	FAST_RAW_IMPORT_FROM_HOST,
	FAST_RAW_IMPORT_FROM_DEVICE,
	FAST_SDI_IMPORT_FROM_HOST,
	FAST_SDI_IMPORT_FROM_DEVICE,

	FAST_EXPORT_TO_HOST,
	FAST_EXPORT_TO_DEVICE,
	FAST_RAW_EXPORT_TO_HOST,
	FAST_RAW_EXPORT_TO_DEVICE,
	FAST_SDI_EXPORT_TO_HOST,
	FAST_SDI_EXPORT_TO_DEVICE,

	FAST_JPEG_ENCODER,
	FAST_JPEG_DECODER,
	FAST_DEBAYER,
	FAST_RESIZE,
	FAST_FILTER,
	FAST_CROP,
	FAST_AFFINE,
	FAST_SURFACE_CONVERTER,
	FAST_DENOISE
} fastComponentType_t;

typedef enum {
	FAST_RESIZE_PRESERV_ASPECT_RATIO,
	FAST_RESIZE_NO_PRESERV_ASPECT_RATIO,
	FAST_RESIZE_PADDING_BACKGROUND
} fastResizeMethod_t;

typedef enum {
	FAST_THRESHOLD_FUNCTION_UNKNOWN,
	FAST_THRESHOLD_FUNCTION_HARD,
	FAST_THRESHOLD_FUNCTION_SOFT,
	FAST_THRESHOLD_FUNCTION_GARROTE
} fastDenoiseThresholdFunctionType_t;

typedef enum {
	FAST_WAVELET_CDF97,
	FAST_WAVELET_CDF53
} fastWaveletType_t;

#ifdef __cplusplus
}
#endif

#endif